#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
	keymap {
		compatible = "zmk,keymap";

//  * DEFAULT LAYER
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |  TAB   |   Q   |   W   |   E   |   R   |   T   |                                   |   Y   |   U   |   I   |   O   |   P   |   \   |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |  ESC   |   A   |   S   |   D   |   F   |   G   |                                   |   H   |   J   |   K   |   L   |   ;   |   '   |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |  SFT   |   Z   |   X   |   C   |   V   |   B   |       |       |   |       |       |   N   |   M   |   ,   |   .   |   /   |  SFT  |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       |       |  move |       |   |       | numb  |       |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * NUMBER LAYER (lower)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * | TRANS  |   /   |   7   |   8   |   9   |   *   |                                   |       |       |       |       |       |       |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * | TRANS  |   =   |   6   |   5   |   4   |   -   |                                   |       |       |       |       |       |       |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * | RET    |   0   |   1   |   2   |   3   |   +   |       |       |   |       |       |       |       |       |       |       |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       |       |  move |       |   |       | numb  |       |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * MOVEMENT LAYER (raise)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |        |       |       |       |       |       |                                   |       |       |       |       |       |       |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |        |       |       |       |       |       |                                   | LEFT  | UP    | DOWN  | RIGHT |       |       |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |        |       |       |       |       |       |       |       |   |       |       | HOME  | PGUP  | PGDN  | END   |       |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       |       |  move |       |   |       | numb  |       |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * SYMBOL LAYER (combine)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |        |       |       |       |       |       |                                   |       |       |       |       |       |   \   |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |        |       |       |       |       |       |                                   |       |       |       |       |   ;   |   '   |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |        |       |       |       |       |       |       |       |   |       |       |       |       |   ,   |   .   |   /   |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       | numb  |  move |       |   |       | func  |       |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
		default_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		movement_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		number_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		function_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	};
};
