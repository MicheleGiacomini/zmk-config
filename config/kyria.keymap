#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFT 0
#define NUMB 1
#define MOVE 2
#define SYMB 3
#define FUNC 4


/ {
	keymap {
		compatible = "zmk,keymap";

//  * DEFAULT LAYER
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |  TAB   |   Q   |   W   |   E   |   R   |   T   |                                   |   Y   |   U   |   I   |   O   |   P   |   \   |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |  ESC   |   A   |   S   |   D   |   F   |   G   |                                   |   H   |   J   |   K   |   L   |   ;   |   '   |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |  SFT   |   Z   |   X   |   C   |   V   |   B   |       |       |   |       |       |   N   |   M   |   ,   |   .   |   /   |  SFT  |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | DEL   |  BSPC |  ALT  |   | ALT   | SPACE | RET   | CTRL  | WIN   |
//  *                          |       |       | numb  |  move |       |   |       | symb  | func  |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * NUMBER LAYER (lower)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |  TAB   |       |       |       |       |       |                                   |       |   7   |   8   |   9   |   /   |       |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |  ESC   |  WIN  | CTRL  | ALT   | SFT   |       |                                   |   =   |   4   |   5   |   6   |   *   |       |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |        |       |       |       |       |       |       |       |   |       |       |       |   1   |   2   |   3   |   -   |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       |   0   |   +   |  RET  |       |
//  *                          |       |       | numb  |  move |       |   |       |       |       |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * MOVEMENT LAYER (raise)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |        |       |       |       |       |       |                                   |       |       |       |       |       |       |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |        |  WIN  | CTRL  | ALT   | SFT   |       |                                   |       | LEFT  | UP    | DOWN  | RIGHT |       |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |        |       |       |       |       |       |       |       |   |       |       |       | HOME  | PGUP  | PGDN  | END   |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       | numb  |  move |       |   |       | symb  | func  |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * SYMBOL LAYER (combine)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |        |   `   |   -   |   =   |   "   |       |                                   |       |       |       |       |       |       |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |        |   #   |   {   |   [   |   (   |   !   |                                   |       |  SFT  | CTRL  |  ALT  |  WIN  |       |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |        |   %   |   $   |   ^   |   *   |       |       |       |   |       |       |       |       |       |       |       |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       | numb  |  move |       |   |       | symb  | func  |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
//  *
//  * SYMBOL LAYER (combine)
//  *
//  * ,------------------------------------------------.                                   ,-----------------------------------------------.
//  * |        |  F9   |  F10  |  F11  |  F12  |       |                                   |       |       |       |       |       |       |
//  * |--------+-------+-------+-------+-------+-------+                                   +-------+-------+-------+-------+-------+-------+
//  * |        |  F5   |  F6   |  F7   |  F8   |       |                                   |       |  SFT  | CTRL  |  ALT  |  WIN  |       |
//  * |--------+-------+-------+-------+-------+-------+-------+-------.   ,-------+-------+-------+-------+-------+-------+-------+-------+
//  * |        |  F1   |  F2   |  F3   |  F4   |       |       |       |   |       |       |       |       |       |       |       |       |
//  * `------------------------+-------+-------+-------+-------+-------+   +-------+-------+-------+-------+-------+-------+-------+-------+
//  *                          |  WIN  |  CTRL | ALT   |  BSPC |  DEL  |   |       | SPACE |       | CTRL  | WIN   |
//  *                          |       |       | numb  |  move |       |   |       | symb  | func  |       |       |
//  *                          `---------------------------------------'   `---------------------------------------'
		default_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E    &kp R    &kp T                                                                          &kp Y        &kp U    &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D    &kp F    &kp G                                                                          &kp H        &kp J    &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C    &kp V    &kp B     &kp LSHFT    &kp LSHFT                     &kp LSHFT &kp LSHFT       &kp N        &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
	                      &kp LGUI &kp LCTRL &lt NUMB DEL &lt MOVE BSPC &kp LALT        &kp RALT  &lt SYMB SPACE  &lt SYMB RET &kp CTRL &kp RGUI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		number_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y   &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H   &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N   &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp  &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC   &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		number_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		function_layer {
			bindings = <
	&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	};
};
